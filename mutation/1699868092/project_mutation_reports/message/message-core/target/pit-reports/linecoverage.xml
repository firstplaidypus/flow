<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='registerDefensiveCopier(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='registerDefensiveCopier(Ljava/lang/Class;Ljava/util/function/UnaryOperator;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;clinit&gt;()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='31'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='30'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='29'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='28'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='32'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='23'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='22'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='27'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='26'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='25'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='24'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='badDefensiveCopy()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$badDefensiveCopy$5(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$badDefensiveCopy$6(Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$badDefensiveCopy$6(Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='&lt;init&gt;()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='set(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:badDefensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage$Update' method='value()Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='access(Ljava/lang/String;)Ljava/lang/Object;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='access(Ljava/lang/String;)Ljava/lang/Object;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='access(Ljava/lang/String;)Ljava/lang/Object;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='access(Ljava/lang/String;)Ljava/lang/Object;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='access(Ljava/lang/String;)Ljava/lang/Object;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='18'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='19'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='asHuman()Ljava/lang/String;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage$Update' method='field()Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$3(Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$3(Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='35'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='34'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='33'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='47'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='46'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='45'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='44'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$4(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='51'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$4(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='50'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$4(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='49'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='48'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='39'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='38'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$4(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='37'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$defensiveCopy$4(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='36'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='43'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='42'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='41'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='40'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='set(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='set(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='self()Lcom/mastercard/test/flow/msg/AbstractMessage;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='set(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='set(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='55'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='54'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='53'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='52'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='57'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='56'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage$Update' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage$Update' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$access$1(Ljava/lang/String;Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Z' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$access$1(Ljava/lang/String;Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Z' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='access(Ljava/lang/String;)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$access$1(Ljava/lang/String;Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Z' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='defensiveCopy()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:defensiveCopy()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$4(Ljava/sql/Timestamp;)Ljava/sql/Timestamp;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$4(Ljava/sql/Timestamp;)Ljava/sql/Timestamp;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$4(Ljava/sql/Timestamp;)Ljava/sql/Timestamp;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$get$1(Ljava/lang/Object;)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$2(Ljava/sql/Date;)Ljava/sql/Date;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$2(Ljava/sql/Date;)Ljava/sql/Date;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$2(Ljava/sql/Date;)Ljava/sql/Date;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='79'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='78'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='77'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='76'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$3(Ljava/sql/Time;)Ljava/sql/Time;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$3(Ljava/sql/Time;)Ljava/sql/Time;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$static$3(Ljava/sql/Time;)Ljava/sql/Time;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='67'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='66'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='65'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='64'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='63'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='62'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='61'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='60'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='75'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='74'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='73'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='72'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='71'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='70'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='69'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='68'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='51'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='50'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='49'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='48'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='47'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='46'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='45'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='44'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='59'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='58'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='57'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='56'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='55'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='54'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='53'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='52'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='35'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='34'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='33'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='32'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='31'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='30'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='29'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='28'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='43'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='42'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='41'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='40'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='39'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='38'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='37'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='36'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='19'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='27'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='26'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='25'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='24'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='23'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='22'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='21'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='20'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='validTypes()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='58'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='get(Ljava/lang/String;)Ljava/lang/Object;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:validTypes()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='set()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='set()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='set()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='set()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='set()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='set()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$NPrdctbl' method='&lt;init&gt;(Ljava/lang/String;I)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$NPrdctbl' method='&lt;init&gt;(Ljava/lang/String;I)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$NPrdctbl' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$NPrdctbl' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$NPrdctbl' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:set()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='17'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='16'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='15'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='14'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='13'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='12'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='valueString(Ljava/lang/Object;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='15'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='14'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='13'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='12'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='19'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='18'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='17'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='16'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='21'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='validateValueType(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;' number='20'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='arrayDefense()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$arrayDefense$7(Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;[[Ljava/lang/Object;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:arrayDefense()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$copyMasksTo$1(Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$copyMasksTo$1(Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$new$0(Lcom/mastercard/test/flow/Message;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='masks()Ljava/util/Map;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete([Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete([Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete([Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='accept(Lcom/mastercard/test/flow/Message;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='accept(Lcom/mastercard/test/flow/Message;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='child()Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='child()Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='child()Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='child()Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$delete$1(Ljava/util/Collection;Lcom/mastercard/test/flow/Message;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='masking(Lcom/mastercard/test/flow/Unpredictable;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='masking(Lcom/mastercard/test/flow/Unpredictable;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='masking(Lcom/mastercard/test/flow/Unpredictable;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='masking(Lcom/mastercard/test/flow/Unpredictable;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='child()Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete(Ljava/util/Collection;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='child()Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete(Ljava/util/Collection;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='19'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='18'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$masking$0(Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Unpredictable;Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='13'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$masking$0(Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Unpredictable;Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='12'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$masking$0(Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Unpredictable;Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='15'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='14'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='lambda$masking$0(Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Unpredictable;Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='17'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='16'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='assertable([Lcom/mastercard/test/flow/Unpredictable;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='copyMasksTo()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='andThen(Ljava/util/function/Consumer;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='andThen(Ljava/util/function/Consumer;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='copyMasksTo(Lcom/mastercard/test/flow/msg/AbstractMessage;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='copyMasksTo(Lcom/mastercard/test/flow/msg/AbstractMessage;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='copyMasksTo(Lcom/mastercard/test/flow/msg/AbstractMessage;)Lcom/mastercard/test/flow/msg/AbstractMessage;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest$ConcreteMessage' method='lambda$asHuman$0(Lcom/mastercard/test/flow/msg/AbstractMessage$Update;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:copyMasksTo()]'/>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$mutableValues$2(Lcom/mastercard/test/flow/msg/AbstractMessageTest$ConcreteMessage;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='registerImmutable(Ljava/lang/Class;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessage' method='registerImmutable(Ljava/lang/Class;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='mutableValues()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:mutableValues()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$masking$0(Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='lambda$masking$0(Lcom/mastercard/test/flow/msg/Mask;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.AbstractMessageTest' method='masking()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.AbstractMessageTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.AbstractMessageTest]/[method:masking()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='constructor()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:constructor()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest$1' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest$1' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testGet(Ljava/util/Map;Ljava/util/Deque;Ljava/lang/Object;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$recurse$1(Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/Map;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$recurse$1(Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/Map;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='data(Ljava/lang/String;)Ljava/util/Map;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='data(Ljava/lang/String;)Ljava/util/Map;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='data(Ljava/lang/String;)Ljava/util/Map;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceMap(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Optional;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceMap(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Optional;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceMap(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Optional;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='listGet(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/ObjIntConsumer;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='testSet(Ljava/util/Map;Ljava/util/Deque;ZLjava/lang/Object;[Ljava/lang/String;)Ljava/util/Map;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$mapGet$1(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/Map;Ljava/lang/String;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='lambda$new$0(Ljava/lang/String;)Z' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='lambda$new$0(Ljava/lang/String;)Z' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='copypasta([Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='lambda$new$0(Ljava/lang/String;)Z' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$mapSet$0(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$10(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='lambda$new$0(Ljava/lang/String;)Z' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapGet(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/BiConsumer;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$mapSet$0(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/String;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$mapGet$1(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/Map;Ljava/lang/String;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$mapGet$1(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/Map;Ljava/lang/String;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$10(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='path([Ljava/lang/String;)Ljava/util/Deque;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='path([Ljava/lang/String;)Ljava/util/Deque;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='path([Ljava/lang/String;)Ljava/util/Deque;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='path([Ljava/lang/String;)Ljava/util/Deque;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapSet(Ljava/lang/Object;)Ljava/util/function/BiConsumer;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverse(Ljava/util/Map;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='listSet(Ljava/lang/Object;)Ljava/util/function/ObjIntConsumer;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$8(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$8(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='vivifyingDeepMap()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='vivifyingDeepMap()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='vivifyingDeepMap()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='vivifyingDeepMap()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='24'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='vivifyingDeepMap()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$9(Ljava/lang/String;)Ljava/util/stream/Stream;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$9(Ljava/lang/String;)Ljava/util/stream/Stream;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$copypasta$9(Ljava/lang/String;)Ljava/util/stream/Stream;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:vivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$listGet$3(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/List;I)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$listGet$3(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/List;I)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$listGet$3(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/List;I)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceList(Ljava/util/List;IZ)Ljava/util/Optional;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceList(Ljava/util/List;IZ)Ljava/util/Optional;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceList(Ljava/util/List;IZ)Ljava/util/Optional;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceList(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Optional;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceList(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Optional;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceList(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Optional;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='16'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='15'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='18'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='12'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='14'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='13'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/Map;Ljava/lang/String;Z)Ljava/lang/Object;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='deepListVivification()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='traverseIndices(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Z)Ljava/util/Optional;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='lambda$new$0(Ljava/lang/String;)Z' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaf(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$listSet$2(Ljava/lang/Object;Ljava/util/List;I)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$listSet$2(Ljava/lang/Object;Ljava/util/List;I)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$leaf$0(ZILjava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='19'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='23'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:deepListVivification()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='recurse(Ljava/util/Map;Lcom/mastercard/test/flow/msg/Forest$PathElement;Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='38'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='37'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='36'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='35'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='34'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='33'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='32'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='31'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='30'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='29'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='28'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='27'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='26'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='25'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='24'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='23'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='22'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='21'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='20'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='19'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$null$2(Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/Map;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$null$2(Ljava/util/Deque;ZLjava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/Map;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$leaves$5(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$leaves$5(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$leaves$5(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$leaves$5(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$leaves$5(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='19'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='20'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='21'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='22'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='23'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='24'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$recurse$3(IZLjava/util/Deque;Ljava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$recurse$3(IZLjava/util/Deque;Ljava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='lambda$recurse$3(IZLjava/util/Deque;Ljava/util/function/BiConsumer;Ljava/util/function/ObjIntConsumer;Ljava/util/List;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='leaves()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceMap(Ljava/util/List;IZ)Ljava/util/Optional;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceMap(Ljava/util/List;IZ)Ljava/util/Optional;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='forceMap(Ljava/util/List;IZ)Ljava/util/Optional;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='leaves(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:leaves()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nestedList()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nestedList()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nestedList()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nestedList()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nestedList()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nestedList()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mapOverwrite()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mapOverwrite()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nonvivifyingDeepMap()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nonvivifyingDeepMap()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nonvivifyingDeepMap()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nonvivifyingDeepMap()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='nonvivifyingDeepMap()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:nonvivifyingDeepMap()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='map()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='map()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='map()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='map()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='map()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:map()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='17'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest' method='force(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/List;IZ)Ljava/lang/Object;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='list()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:list()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mixed()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mixed()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mixed()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mixed()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='mixed()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:mixed()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='lambda$negativeIndices$4(Ljava/util/Map;Ljava/util/Deque;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='negativeIndices()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='negativeIndices()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='negativeIndices()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='negativeIndices()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='negativeIndices()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.ForestTest' method='negativeIndices()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='21'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='20'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Forest$PathElement' method='&lt;init&gt;(Ljava/lang/String;)V' number='22'><tests>
<test name='com.mastercard.test.flow.msg.ForestTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.ForestTest]/[method:negativeIndices()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='21'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='19'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='20'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='delete()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='delete(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:delete()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain([Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain([Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain([Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain(Ljava/util/Set;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain(Ljava/util/Set;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='retain()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='retain(Ljava/util/stream/Stream;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$retain$2(Ljava/util/Set;Lcom/mastercard/test/flow/Message;)V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:retain()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$field$4(Ljava/lang/String;Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Message;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$field$4(Ljava/lang/String;Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Message;)V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$field$4(Ljava/lang/String;Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Message;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$field$4(Ljava/lang/String;Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Message;)V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$field$4(Ljava/lang/String;Ljava/util/function/UnaryOperator;Lcom/mastercard/test/flow/Message;)V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$null$3(Lcom/mastercard/test/flow/Message;Ljava/lang/String;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$null$3(Lcom/mastercard/test/flow/Message;Ljava/lang/String;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$11(Ljava/util/regex/Matcher;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/util/regex/Pattern;Ljava/util/function/Function;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/util/regex/Pattern;Ljava/util/function/Function;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$12(Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$12(Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='string(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='string(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$captures$10(Ljava/util/regex/Pattern;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$string$6(Ljava/util/function/UnaryOperator;Ljava/lang/Object;)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$string$6(Ljava/util/function/UnaryOperator;Ljava/lang/Object;)Ljava/lang/Object;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$string$6(Ljava/util/function/UnaryOperator;Ljava/lang/Object;)Ljava/lang/Object;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='field(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='28'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='27'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='26'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='field(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='25'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='24'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='captures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='23'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='22'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='21'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='20'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='19'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='captures()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:captures()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='chars(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='chars(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='chars()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='chars(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='chars(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='rightPad(Ljava/lang/StringBuilder;ILjava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='rightPad(Ljava/lang/StringBuilder;ILjava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='rightPad(Ljava/lang/StringBuilder;ILjava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='rightPad(Ljava/lang/StringBuilder;ILjava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='rightPad(Ljava/lang/StringBuilder;ILjava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='rightPad(Ljava/lang/StringBuilder;ILjava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$chars$7(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$chars$7(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$chars$7(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$chars$7(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:chars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='label(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='label(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='label()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$label$8(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:label()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='match(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='match(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='match(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='18'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='17'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='16'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='match()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='match(Ljava/lang/String;Ljava/util/regex/Pattern;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='match(Ljava/lang/String;Ljava/util/regex/Pattern;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$match$9(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:match()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='7'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='6'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='9'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='8'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='11'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='10'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='13'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='12'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='5'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='4'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='15'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='replace()V' number='14'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='replace(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/Mask;' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='replace(Ljava/lang/String;Ljava/lang/Object;)Lcom/mastercard/test/flow/msg/Mask;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='lambda$replace$5(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:replace()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='badChars()V' number='1'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='badChars()V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='chars(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.Mask' method='chars(Ljava/lang/String;Ljava/lang/String;)Lcom/mastercard/test/flow/msg/Mask;' number='3'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='lambda$badChars$0(Lcom/mastercard/test/flow/msg/Mask;)V' number='0'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
</tests>
</block>
<block classname='com.mastercard.test.flow.msg.MaskTest' method='badChars()V' number='2'><tests>
<test name='com.mastercard.test.flow.msg.MaskTest.[engine:junit-jupiter]/[class:com.mastercard.test.flow.msg.MaskTest]/[method:badChars()]'/>
</tests>
</block>
</coverage>
