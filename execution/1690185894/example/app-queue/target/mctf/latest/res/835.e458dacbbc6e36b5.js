"use strict";(self.webpackChunkreport=self.webpackChunkreport||[]).push([[835],{8835:(it,pe,B)=>{B.r(pe),B.d(pe,{diagram:()=>Xe});var m=B(6847),Te=B(6563),se=(B(1764),B(6780),B(2735),function(){var r=function(z,l,p,g){for(p=p||{},g=z.length;g--;p[z[g]]=l);return p},c=[1,4],o=[1,7],h=[1,5],a=[1,9],n=[1,6],b=[2,6],f=[1,16],T=[6,8,14,20,22,24,25,27,29,32,37,40,50,55],E=[8,14,20,22,24,25,27,29,32,37,40],u=[8,13,14,20,22,24,25,27,29,32,37,40],k=[1,26],x=[6,8,14,50,55],s=[8,14,55],L=[1,53],R=[1,52],D=[8,14,30,33,35,38,55],y=[1,67],d=[1,68],_=[1,69],G=[8,14,33,35,42,55],ne={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,directive:5,GG:6,document:7,EOF:8,":":9,DIR:10,options:11,body:12,OPT:13,NL:14,line:15,statement:16,commitStatement:17,mergeStatement:18,cherryPickStatement:19,acc_title:20,acc_title_value:21,acc_descr:22,acc_descr_value:23,acc_descr_multiline_value:24,section:25,branchStatement:26,CHECKOUT:27,ref:28,BRANCH:29,ORDER:30,NUM:31,CHERRY_PICK:32,COMMIT_ID:33,STR:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,openDirective:46,typeDirective:47,closeDirective:48,argDirective:49,open_directive:50,type_directive:51,arg_directive:52,close_directive:53,ID:54,";":55,$accept:0,$end:1},terminals_:{2:"error",6:"GG",8:"EOF",9:":",10:"DIR",13:"OPT",14:"NL",20:"acc_title",21:"acc_title_value",22:"acc_descr",23:"acc_descr_value",24:"acc_descr_multiline_value",25:"section",27:"CHECKOUT",29:"BRANCH",30:"ORDER",31:"NUM",32:"CHERRY_PICK",33:"COMMIT_ID",34:"STR",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",50:"open_directive",51:"type_directive",52:"arg_directive",53:"close_directive",54:"ID",55:";"},productions_:[0,[3,2],[3,2],[3,3],[3,4],[3,5],[7,0],[7,2],[11,2],[11,1],[12,0],[12,2],[15,2],[15,1],[16,1],[16,1],[16,1],[16,2],[16,2],[16,1],[16,1],[16,1],[16,2],[26,2],[26,4],[19,3],[19,5],[19,5],[19,5],[19,5],[18,2],[18,4],[18,4],[18,4],[18,6],[18,6],[18,6],[18,6],[18,6],[18,6],[18,8],[18,8],[18,8],[18,8],[18,8],[18,8],[17,2],[17,3],[17,3],[17,5],[17,5],[17,3],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,3],[17,5],[17,5],[17,5],[17,5],[17,5],[17,5],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[17,9],[41,0],[41,1],[39,1],[39,1],[39,1],[5,3],[5,5],[46,1],[47,1],[49,1],[48,1],[28,1],[28,1],[4,1],[4,1],[4,1]],performAction:function(l,p,g,i,v,e,Q){var t=e.length-1;switch(v){case 3:return e[t];case 4:return e[t-1];case 5:return i.setDirection(e[t-3]),e[t-1];case 7:i.setOptions(e[t-1]),this.$=e[t];break;case 8:e[t-1]+=e[t],this.$=e[t-1];break;case 10:this.$=[];break;case 11:e[t-1].push(e[t]),this.$=e[t-1];break;case 12:this.$=e[t-1];break;case 17:this.$=e[t].trim(),i.setAccTitle(this.$);break;case 18:case 19:this.$=e[t].trim(),i.setAccDescription(this.$);break;case 20:i.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 22:i.checkout(e[t]);break;case 23:i.branch(e[t]);break;case 24:i.branch(e[t-2],e[t]);break;case 25:i.cherryPick(e[t],"",void 0);break;case 26:i.cherryPick(e[t-2],"",e[t]);break;case 27:case 29:i.cherryPick(e[t-2],"","");break;case 28:i.cherryPick(e[t],"",e[t-2]);break;case 30:i.merge(e[t],"","","");break;case 31:i.merge(e[t-2],e[t],"","");break;case 32:i.merge(e[t-2],"",e[t],"");break;case 33:i.merge(e[t-2],"","",e[t]);break;case 34:i.merge(e[t-4],e[t],"",e[t-2]);break;case 35:i.merge(e[t-4],"",e[t],e[t-2]);break;case 36:i.merge(e[t-4],"",e[t-2],e[t]);break;case 37:i.merge(e[t-4],e[t-2],e[t],"");break;case 38:i.merge(e[t-4],e[t-2],"",e[t]);break;case 39:i.merge(e[t-4],e[t],e[t-2],"");break;case 40:i.merge(e[t-6],e[t-4],e[t-2],e[t]);break;case 41:i.merge(e[t-6],e[t],e[t-4],e[t-2]);break;case 42:i.merge(e[t-6],e[t-4],e[t],e[t-2]);break;case 43:i.merge(e[t-6],e[t-2],e[t-4],e[t]);break;case 44:i.merge(e[t-6],e[t],e[t-2],e[t-4]);break;case 45:i.merge(e[t-6],e[t-2],e[t],e[t-4]);break;case 46:i.commit(e[t]);break;case 47:i.commit("","",i.commitType.NORMAL,e[t]);break;case 48:i.commit("","",e[t],"");break;case 49:i.commit("","",e[t],e[t-2]);break;case 50:i.commit("","",e[t-2],e[t]);break;case 51:i.commit("",e[t],i.commitType.NORMAL,"");break;case 52:i.commit("",e[t-2],i.commitType.NORMAL,e[t]);break;case 53:i.commit("",e[t],i.commitType.NORMAL,e[t-2]);break;case 54:i.commit("",e[t-2],e[t],"");break;case 55:i.commit("",e[t],e[t-2],"");break;case 56:i.commit("",e[t-4],e[t-2],e[t]);break;case 57:i.commit("",e[t-4],e[t],e[t-2]);break;case 58:i.commit("",e[t-2],e[t-4],e[t]);break;case 59:i.commit("",e[t],e[t-4],e[t-2]);break;case 60:i.commit("",e[t],e[t-2],e[t-4]);break;case 61:i.commit("",e[t-2],e[t],e[t-4]);break;case 62:i.commit(e[t],"",i.commitType.NORMAL,"");break;case 63:i.commit(e[t],"",i.commitType.NORMAL,e[t-2]);break;case 64:i.commit(e[t-2],"",i.commitType.NORMAL,e[t]);break;case 65:i.commit(e[t-2],"",e[t],"");break;case 66:i.commit(e[t],"",e[t-2],"");break;case 67:i.commit(e[t],e[t-2],i.commitType.NORMAL,"");break;case 68:i.commit(e[t-2],e[t],i.commitType.NORMAL,"");break;case 69:i.commit(e[t-4],"",e[t-2],e[t]);break;case 70:i.commit(e[t-4],"",e[t],e[t-2]);break;case 71:i.commit(e[t-2],"",e[t-4],e[t]);break;case 72:i.commit(e[t],"",e[t-4],e[t-2]);break;case 73:i.commit(e[t],"",e[t-2],e[t-4]);break;case 74:i.commit(e[t-2],"",e[t],e[t-4]);break;case 75:i.commit(e[t-4],e[t],e[t-2],"");break;case 76:i.commit(e[t-4],e[t-2],e[t],"");break;case 77:i.commit(e[t-2],e[t],e[t-4],"");break;case 78:i.commit(e[t],e[t-2],e[t-4],"");break;case 79:i.commit(e[t],e[t-4],e[t-2],"");break;case 80:i.commit(e[t-2],e[t-4],e[t],"");break;case 81:i.commit(e[t-4],e[t],i.commitType.NORMAL,e[t-2]);break;case 82:i.commit(e[t-4],e[t-2],i.commitType.NORMAL,e[t]);break;case 83:i.commit(e[t-2],e[t],i.commitType.NORMAL,e[t-4]);break;case 84:i.commit(e[t],e[t-2],i.commitType.NORMAL,e[t-4]);break;case 85:i.commit(e[t],e[t-4],i.commitType.NORMAL,e[t-2]);break;case 86:i.commit(e[t-2],e[t-4],i.commitType.NORMAL,e[t]);break;case 87:i.commit(e[t-6],e[t-4],e[t-2],e[t]);break;case 88:i.commit(e[t-6],e[t-4],e[t],e[t-2]);break;case 89:i.commit(e[t-6],e[t-2],e[t-4],e[t]);break;case 90:i.commit(e[t-6],e[t],e[t-4],e[t-2]);break;case 91:i.commit(e[t-6],e[t-2],e[t],e[t-4]);break;case 92:i.commit(e[t-6],e[t],e[t-2],e[t-4]);break;case 93:i.commit(e[t-4],e[t-6],e[t-2],e[t]);break;case 94:i.commit(e[t-4],e[t-6],e[t],e[t-2]);break;case 95:i.commit(e[t-2],e[t-6],e[t-4],e[t]);break;case 96:i.commit(e[t],e[t-6],e[t-4],e[t-2]);break;case 97:i.commit(e[t-2],e[t-6],e[t],e[t-4]);break;case 98:i.commit(e[t],e[t-6],e[t-2],e[t-4]);break;case 99:i.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 100:i.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 101:i.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 102:i.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 103:i.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 104:i.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 105:i.commit(e[t-2],e[t-4],e[t-6],e[t]);break;case 106:i.commit(e[t],e[t-4],e[t-6],e[t-2]);break;case 107:i.commit(e[t-2],e[t],e[t-6],e[t-4]);break;case 108:i.commit(e[t],e[t-2],e[t-6],e[t-4]);break;case 109:i.commit(e[t-4],e[t-2],e[t-6],e[t]);break;case 110:i.commit(e[t-4],e[t],e[t-6],e[t-2]);break;case 111:this.$="";break;case 112:this.$=e[t];break;case 113:this.$=i.commitType.NORMAL;break;case 114:this.$=i.commitType.REVERSE;break;case 115:this.$=i.commitType.HIGHLIGHT;break;case 118:i.parseDirective("%%{","open_directive");break;case 119:i.parseDirective(e[t],"type_directive");break;case 120:e[t]=e[t].trim().replace(/'/g,'"'),i.parseDirective(e[t],"arg_directive");break;case 121:i.parseDirective("}%%","close_directive","gitGraph")}},table:[{3:1,4:2,5:3,6:c,8:o,14:h,46:8,50:a,55:n},{1:[3]},{3:10,4:2,5:3,6:c,8:o,14:h,46:8,50:a,55:n},{3:11,4:2,5:3,6:c,8:o,14:h,46:8,50:a,55:n},{7:12,8:b,9:[1,13],10:[1,14],11:15,14:f},r(T,[2,124]),r(T,[2,125]),r(T,[2,126]),{47:17,51:[1,18]},{51:[2,118]},{1:[2,1]},{1:[2,2]},{8:[1,19]},{7:20,8:b,11:15,14:f},{9:[1,21]},r(E,[2,10],{12:22,13:[1,23]}),r(u,[2,9]),{9:[1,25],48:24,53:k},r([9,53],[2,119]),{1:[2,3]},{8:[1,27]},{7:28,8:b,11:15,14:f},{8:[2,7],14:[1,31],15:29,16:30,17:32,18:33,19:34,20:[1,35],22:[1,36],24:[1,37],25:[1,38],26:39,27:[1,40],29:[1,44],32:[1,43],37:[1,42],40:[1,41]},r(u,[2,8]),r(x,[2,116]),{49:45,52:[1,46]},r(x,[2,121]),{1:[2,4]},{8:[1,47]},r(E,[2,11]),{4:48,8:o,14:h,55:n},r(E,[2,13]),r(s,[2,14]),r(s,[2,15]),r(s,[2,16]),{21:[1,49]},{23:[1,50]},r(s,[2,19]),r(s,[2,20]),r(s,[2,21]),{28:51,34:L,54:R},r(s,[2,111],{41:54,33:[1,57],34:[1,59],35:[1,55],38:[1,56],42:[1,58]}),{28:60,34:L,54:R},{33:[1,61],35:[1,62]},{28:63,34:L,54:R},{48:64,53:k},{53:[2,120]},{1:[2,5]},r(E,[2,12]),r(s,[2,17]),r(s,[2,18]),r(s,[2,22]),r(D,[2,122]),r(D,[2,123]),r(s,[2,46]),{34:[1,65]},{39:66,43:y,44:d,45:_},{34:[1,70]},{34:[1,71]},r(s,[2,112]),r(s,[2,30],{33:[1,72],35:[1,74],38:[1,73]}),{34:[1,75]},{34:[1,76],36:[1,77]},r(s,[2,23],{30:[1,78]}),r(x,[2,117]),r(s,[2,47],{33:[1,80],38:[1,79],42:[1,81]}),r(s,[2,48],{33:[1,83],35:[1,82],42:[1,84]}),r(G,[2,113]),r(G,[2,114]),r(G,[2,115]),r(s,[2,51],{35:[1,85],38:[1,86],42:[1,87]}),r(s,[2,62],{33:[1,90],35:[1,88],38:[1,89]}),{34:[1,91]},{39:92,43:y,44:d,45:_},{34:[1,93]},r(s,[2,25],{35:[1,94]}),{33:[1,95]},{33:[1,96]},{31:[1,97]},{39:98,43:y,44:d,45:_},{34:[1,99]},{34:[1,100]},{34:[1,101]},{34:[1,102]},{34:[1,103]},{34:[1,104]},{39:105,43:y,44:d,45:_},{34:[1,106]},{34:[1,107]},{39:108,43:y,44:d,45:_},{34:[1,109]},r(s,[2,31],{35:[1,111],38:[1,110]}),r(s,[2,32],{33:[1,113],35:[1,112]}),r(s,[2,33],{33:[1,114],38:[1,115]}),{34:[1,116],36:[1,117]},{34:[1,118]},{34:[1,119]},r(s,[2,24]),r(s,[2,49],{33:[1,120],42:[1,121]}),r(s,[2,53],{38:[1,122],42:[1,123]}),r(s,[2,63],{33:[1,125],38:[1,124]}),r(s,[2,50],{33:[1,126],42:[1,127]}),r(s,[2,55],{35:[1,128],42:[1,129]}),r(s,[2,66],{33:[1,131],35:[1,130]}),r(s,[2,52],{38:[1,132],42:[1,133]}),r(s,[2,54],{35:[1,134],42:[1,135]}),r(s,[2,67],{35:[1,137],38:[1,136]}),r(s,[2,64],{33:[1,139],38:[1,138]}),r(s,[2,65],{33:[1,141],35:[1,140]}),r(s,[2,68],{35:[1,143],38:[1,142]}),{39:144,43:y,44:d,45:_},{34:[1,145]},{34:[1,146]},{34:[1,147]},{34:[1,148]},{39:149,43:y,44:d,45:_},r(s,[2,26]),r(s,[2,27]),r(s,[2,28]),r(s,[2,29]),{34:[1,150]},{34:[1,151]},{39:152,43:y,44:d,45:_},{34:[1,153]},{39:154,43:y,44:d,45:_},{34:[1,155]},{34:[1,156]},{34:[1,157]},{34:[1,158]},{34:[1,159]},{34:[1,160]},{34:[1,161]},{39:162,43:y,44:d,45:_},{34:[1,163]},{34:[1,164]},{34:[1,165]},{39:166,43:y,44:d,45:_},{34:[1,167]},{39:168,43:y,44:d,45:_},{34:[1,169]},{34:[1,170]},{34:[1,171]},{39:172,43:y,44:d,45:_},{34:[1,173]},r(s,[2,37],{35:[1,174]}),r(s,[2,38],{38:[1,175]}),r(s,[2,36],{33:[1,176]}),r(s,[2,39],{35:[1,177]}),r(s,[2,34],{38:[1,178]}),r(s,[2,35],{33:[1,179]}),r(s,[2,60],{42:[1,180]}),r(s,[2,73],{33:[1,181]}),r(s,[2,61],{42:[1,182]}),r(s,[2,84],{38:[1,183]}),r(s,[2,74],{33:[1,184]}),r(s,[2,83],{38:[1,185]}),r(s,[2,59],{42:[1,186]}),r(s,[2,72],{33:[1,187]}),r(s,[2,58],{42:[1,188]}),r(s,[2,78],{35:[1,189]}),r(s,[2,71],{33:[1,190]}),r(s,[2,77],{35:[1,191]}),r(s,[2,57],{42:[1,192]}),r(s,[2,85],{38:[1,193]}),r(s,[2,56],{42:[1,194]}),r(s,[2,79],{35:[1,195]}),r(s,[2,80],{35:[1,196]}),r(s,[2,86],{38:[1,197]}),r(s,[2,70],{33:[1,198]}),r(s,[2,81],{38:[1,199]}),r(s,[2,69],{33:[1,200]}),r(s,[2,75],{35:[1,201]}),r(s,[2,76],{35:[1,202]}),r(s,[2,82],{38:[1,203]}),{34:[1,204]},{39:205,43:y,44:d,45:_},{34:[1,206]},{34:[1,207]},{39:208,43:y,44:d,45:_},{34:[1,209]},{34:[1,210]},{34:[1,211]},{34:[1,212]},{39:213,43:y,44:d,45:_},{34:[1,214]},{39:215,43:y,44:d,45:_},{34:[1,216]},{34:[1,217]},{34:[1,218]},{34:[1,219]},{34:[1,220]},{34:[1,221]},{34:[1,222]},{39:223,43:y,44:d,45:_},{34:[1,224]},{34:[1,225]},{34:[1,226]},{39:227,43:y,44:d,45:_},{34:[1,228]},{39:229,43:y,44:d,45:_},{34:[1,230]},{34:[1,231]},{34:[1,232]},{39:233,43:y,44:d,45:_},r(s,[2,40]),r(s,[2,42]),r(s,[2,41]),r(s,[2,43]),r(s,[2,45]),r(s,[2,44]),r(s,[2,101]),r(s,[2,102]),r(s,[2,99]),r(s,[2,100]),r(s,[2,104]),r(s,[2,103]),r(s,[2,108]),r(s,[2,107]),r(s,[2,106]),r(s,[2,105]),r(s,[2,110]),r(s,[2,109]),r(s,[2,98]),r(s,[2,97]),r(s,[2,96]),r(s,[2,95]),r(s,[2,93]),r(s,[2,94]),r(s,[2,92]),r(s,[2,91]),r(s,[2,90]),r(s,[2,89]),r(s,[2,87]),r(s,[2,88])],defaultActions:{9:[2,118],10:[2,1],11:[2,2],19:[2,3],27:[2,4],46:[2,120],47:[2,5]},parseError:function(l,p){if(!p.recoverable){var g=new Error(l);throw g.hash=p,g}this.trace(l)},parse:function(l){var p=this,g=[0],i=[],v=[null],e=[],Q=this.table,t="",te=0,ye=0,$e=2,Ee=1,et=e.slice.call(arguments,1),O=Object.create(this.lexer),Y={yy:{}};for(var le in this.yy)Object.prototype.hasOwnProperty.call(this.yy,le)&&(Y.yy[le]=this.yy[le]);O.setInput(l,Y.yy),Y.yy.lexer=O,Y.yy.parser=this,typeof O.yylloc>"u"&&(O.yylloc={});var he=O.yylloc;e.push(he);var tt=O.options&&O.options.ranges;function rt(){var V;return"number"!=typeof(V=i.pop()||O.lex()||Ee)&&(V instanceof Array&&(V=(i=V).pop()),V=p.symbols_[V]||V),V}this.parseError="function"==typeof Y.yy.parseError?Y.yy.parseError:Object.getPrototypeOf(this).parseError;for(var P,U,N,me,re,H,ie,F={};;){if(this.defaultActions[U=g[g.length-1]]?N=this.defaultActions[U]:((null===P||typeof P>"u")&&(P=rt()),N=Q[U]&&Q[U][P]),typeof N>"u"||!N.length||!N[0]){var ue="";for(re in ie=[],Q[U])this.terminals_[re]&&re>$e&&ie.push("'"+this.terminals_[re]+"'");ue=O.showPosition?"Parse error on line "+(te+1)+":\n"+O.showPosition()+"\nExpecting "+ie.join(", ")+", got '"+(this.terminals_[P]||P)+"'":"Parse error on line "+(te+1)+": Unexpected "+(P==Ee?"end of input":"'"+(this.terminals_[P]||P)+"'"),this.parseError(ue,{text:O.match,token:this.terminals_[P]||P,line:O.yylineno,loc:he,expected:ie})}if(N[0]instanceof Array&&N.length>1)throw new Error("Parse Error: multiple actions possible at state: "+U+", token: "+P);switch(N[0]){case 1:g.push(P),v.push(O.yytext),e.push(O.yylloc),g.push(N[1]),P=null,ye=O.yyleng,t=O.yytext,te=O.yylineno,he=O.yylloc;break;case 2:if(F.$=v[v.length-(H=this.productions_[N[1]][1])],F._$={first_line:e[e.length-(H||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(H||1)].first_column,last_column:e[e.length-1].last_column},tt&&(F._$.range=[e[e.length-(H||1)].range[0],e[e.length-1].range[1]]),typeof(me=this.performAction.apply(F,[t,ye,te,Y.yy,N[1],v,e].concat(et)))<"u")return me;H&&(g=g.slice(0,-1*H*2),v=v.slice(0,-1*H),e=e.slice(0,-1*H)),g.push(this.productions_[N[1]][0]),v.push(F.$),e.push(F._$),g.push(Q[g[g.length-2]][g[g.length-1]]);break;case 3:return!0}}return!0}};function oe(){this.yy={}}return ne.lexer={EOF:1,parseError:function(p,g){if(!this.yy.parser)throw new Error(p);this.yy.parser.parseError(p,g)},setInput:function(l,p){return this.yy=p||this.yy||{},this._input=l,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var l=this._input[0];return this.yytext+=l,this.yyleng++,this.offset++,this.match+=l,this.matched+=l,l.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),l},unput:function(l){var p=l.length,g=l.split(/(?:\r\n?|\n)/g);this._input=l+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-p),this.offset-=p;var i=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),g.length-1&&(this.yylineno-=g.length-1);var v=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:g?(g.length===i.length?this.yylloc.first_column:0)+i[i.length-g.length].length-g[0].length:this.yylloc.first_column-p},this.options.ranges&&(this.yylloc.range=[v[0],v[0]+this.yyleng-p]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(l){this.unput(this.match.slice(l))},pastInput:function(){var l=this.matched.substr(0,this.matched.length-this.match.length);return(l.length>20?"...":"")+l.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var l=this.match;return l.length<20&&(l+=this._input.substr(0,20-l.length)),(l.substr(0,20)+(l.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var l=this.pastInput(),p=new Array(l.length+1).join("-");return l+this.upcomingInput()+"\n"+p+"^"},test_match:function(l,p){var g,i,v;if(this.options.backtrack_lexer&&(v={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(v.yylloc.range=this.yylloc.range.slice(0))),(i=l[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=i.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:i?i[i.length-1].length-i[i.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+l[0].length},this.yytext+=l[0],this.match+=l[0],this.matches=l,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(l[0].length),this.matched+=l[0],g=this.performAction.call(this,this.yy,this,p,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),g)return g;if(this._backtrack){for(var e in v)this[e]=v[e];return!1}return!1},next:function(){if(this.done)return this.EOF;var l,p,g,i;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var v=this._currentRules(),e=0;e<v.length;e++)if((g=this._input.match(this.rules[v[e]]))&&(!p||g[0].length>p[0].length)){if(p=g,i=e,this.options.backtrack_lexer){if(!1!==(l=this.test_match(g,v[e])))return l;if(this._backtrack){p=!1;continue}return!1}if(!this.options.flex)break}return p?!1!==(l=this.test_match(p,v[i]))&&l:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){return this.next()||this.lex()},begin:function(p){this.conditionStack.push(p)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(p){return(p=this.conditionStack.length-1-Math.abs(p||0))>=0?this.conditionStack[p]:"INITIAL"},pushState:function(p){this.begin(p)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(p,g,i,v){switch(i){case 0:return this.begin("open_directive"),50;case 1:return this.begin("type_directive"),51;case 2:return this.popState(),this.begin("arg_directive"),9;case 3:return this.popState(),this.popState(),53;case 4:return 52;case 5:return this.begin("acc_title"),20;case 6:return this.popState(),"acc_title_value";case 7:return this.begin("acc_descr"),22;case 8:return this.popState(),"acc_descr_value";case 9:this.begin("acc_descr_multiline");break;case 10:case 34:case 38:this.popState();break;case 11:return"acc_descr_multiline_value";case 12:return 14;case 13:case 14:break;case 15:return 6;case 16:return 40;case 17:return 33;case 18:return 38;case 19:return 42;case 20:return 43;case 21:return 44;case 22:return 45;case 23:return 35;case 24:return 29;case 25:return 30;case 26:return 37;case 27:return 32;case 28:return 27;case 29:case 30:return 10;case 31:return 9;case 32:return"CARET";case 33:this.begin("options");break;case 35:return 13;case 36:return 36;case 37:this.begin("string");break;case 39:return 34;case 40:return 31;case 41:return 54;case 42:return 8}},rules:[/^(?:%%\{)/i,/^(?:((?:(?!\}%%)[^:.])*))/i,/^(?::)/i,/^(?:\}%%)/i,/^(?:((?:(?!\}%%).|\n)*))/i,/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[10,11],inclusive:!1},acc_descr:{rules:[8],inclusive:!1},acc_title:{rules:[6],inclusive:!1},close_directive:{rules:[],inclusive:!1},arg_directive:{rules:[3,4],inclusive:!1},type_directive:{rules:[2,3],inclusive:!1},open_directive:{rules:[1],inclusive:!1},options:{rules:[34,35],inclusive:!1},string:{rules:[38,39],inclusive:!1},INITIAL:{rules:[0,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,40,41,42,43],inclusive:!0}}},oe.prototype=ne,ne.Parser=oe,new oe}());se.parser=se;const we=se;let X=(0,m.c)().gitGraph.mainBranchName,Re=(0,m.c)().gitGraph.mainBranchOrder,M={},A=null,q={};q[X]={name:X,order:Re};let w={};w[X]=A;let C=X,fe="LR",j=0;function ce(){return(0,m.y)({length:7})}let be={};const ge=function(r){if(r=m.e.sanitizeText(r,(0,m.c)()),void 0===w[r]){let c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw c.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},c}C=r,A=M[w[C]]};function de(r,c,o){const h=r.indexOf(c);-1===h?r.push(o):r.splice(h,1,o)}function ke(r){const c=r.reduce((a,n)=>a.seq>n.seq?a:n,r[0]);let o="";r.forEach(function(a){o+=a===c?"\t*":"\t|"});const h=[o,c.id,c.seq];for(let a in w)w[a]===c.id&&h.push(a);if(m.l.debug(h.join(" ")),c.parents&&2==c.parents.length)de(r,c,M[c.parents[0]]),r.push(M[c.parents[1]]);else{if(0==c.parents.length)return;de(r,c,M[c.parents])}r=function Ce(r,c){const o=Object.create(null);return r.reduce((h,a)=>{const n=c(a);return o[n]||(o[n]=!0,h.push(a)),h},[])}(r,a=>a.id),ke(r)}const _e=function(){const r=Object.keys(M).map(function(c){return M[c]});return r.forEach(function(c){m.l.debug(c.id)}),r.sort((c,o)=>c.seq-o.seq),r},W={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4};let J={};let S={},Z={},$=[],ee=0;const xe=(r,c,o)=>{const h=(0,m.z)().gitGraph,a=r.append("g").attr("class","commit-bullets"),n=r.append("g").attr("class","commit-labels");let b=0;Object.keys(c).sort((E,u)=>c[E].seq-c[u].seq).forEach(E=>{const u=c[E],k=S[u.branch].pos,x=b+10;if(o){let s,L=void 0!==u.customType&&""!==u.customType?u.customType:u.type;switch(L){case 0:default:s="commit-normal";break;case 1:s="commit-reverse";break;case 2:s="commit-highlight";break;case 3:s="commit-merge";break;case 4:s="commit-cherry-pick"}if(2===L){const R=a.append("rect");R.attr("x",x-10),R.attr("y",k-10),R.attr("height",20),R.attr("width",20),R.attr("class",`commit ${u.id} commit-highlight${S[u.branch].index%8} ${s}-outer`),a.append("rect").attr("x",x-6).attr("y",k-6).attr("height",12).attr("width",12).attr("class",`commit ${u.id} commit${S[u.branch].index%8} ${s}-inner`)}else if(4===L)a.append("circle").attr("cx",x).attr("cy",k).attr("r",10).attr("class",`commit ${u.id} ${s}`),a.append("circle").attr("cx",x-3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${u.id} ${s}`),a.append("circle").attr("cx",x+3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${u.id} ${s}`),a.append("line").attr("x1",x+3).attr("y1",k+1).attr("x2",x).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${u.id} ${s}`),a.append("line").attr("x1",x-3).attr("y1",k+1).attr("x2",x).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${u.id} ${s}`);else{const R=a.append("circle");if(R.attr("cx",x),R.attr("cy",k),R.attr("r",3===u.type?9:10),R.attr("class",`commit ${u.id} commit${S[u.branch].index%8}`),3===L){const D=a.append("circle");D.attr("cx",x),D.attr("cy",k),D.attr("r",6),D.attr("class",`commit ${s} ${u.id} commit${S[u.branch].index%8}`)}1===L&&a.append("path").attr("d",`M ${x-5},${k-5}L${x+5},${k+5}M${x-5},${k+5}L${x+5},${k-5}`).attr("class",`commit ${s} ${u.id} commit${S[u.branch].index%8}`)}}if(Z[u.id]={x:b+10,y:k},o){if(4!==u.type&&(u.customId&&3===u.type||3!==u.type)&&h.showCommitLabel){const R=n.append("g"),D=R.insert("rect").attr("class","commit-label-bkg"),y=R.append("text").attr("x",b).attr("y",k+25).attr("class","commit-label").text(u.id);let d=y.node().getBBox();D.attr("x",b+10-d.width/2-2).attr("y",k+13.5).attr("width",d.width+4).attr("height",d.height+4),y.attr("x",b+10-d.width/2),h.rotateCommitLabel&&R.attr("transform","translate("+(-7.5-(d.width+10)/25*9.5)+", "+(10+d.width/25*8.5)+") rotate(-45, "+b+", "+k+")")}if(u.tag){const R=n.insert("polygon"),D=n.append("circle"),y=n.append("text").attr("y",k-16).attr("class","tag-label").text(u.tag);let d=y.node().getBBox();y.attr("x",b+10-d.width/2);const _=d.height/2,G=k-19.2;R.attr("class","tag-label-bkg").attr("points",`\n          ${b-d.width/2-2},${G+2}\n          ${b-d.width/2-2},${G-2}\n          ${b+10-d.width/2-4},${G-_-2}\n          ${b+10+d.width/2+4},${G-_-2}\n          ${b+10+d.width/2+4},${G+_+2}\n          ${b+10-d.width/2-4},${G+_+2}`),D.attr("cx",b-d.width/2+2).attr("cy",G).attr("r",1.5).attr("class","tag-hole")}}b+=50,b>ee&&(ee=b)})},ae=(r,c,o=0)=>{const h=r+Math.abs(r-c)/2;if(o>5)return h;if($.every(b=>Math.abs(b-h)>=10))return $.push(h),h;const n=Math.abs(r-c);return ae(r,c-n/5,o+1)},Xe={parser:we,db:{parseDirective:function(r,c,o){m.m.parseDirective(this,r,c,o)},getConfig:()=>(0,m.c)().gitGraph,setDirection:function(r){fe=r},setOptions:function(r){m.l.debug("options str",r),r=(r=r&&r.trim())||"{}";try{be=JSON.parse(r)}catch(c){m.l.error("error while parsing gitGraph options",c.message)}},getOptions:function(){return be},commit:function(r,c,o,h){m.l.debug("Entering commit:",r,c,o,h),c=m.e.sanitizeText(c,(0,m.c)()),r=m.e.sanitizeText(r,(0,m.c)()),h=m.e.sanitizeText(h,(0,m.c)());const a={id:c||j+"-"+ce(),message:r,seq:j++,type:o||W.NORMAL,tag:h||"",parents:null==A?[]:[A.id],branch:C};A=a,M[a.id]=a,w[C]=a.id,m.l.debug("in pushCommit "+a.id)},branch:function(r,c){if(r=m.e.sanitizeText(r,(0,m.c)()),void 0!==w[r]){let o=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw o.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},o}w[r]=null!=A?A.id:null,q[r]={name:r,order:c?parseInt(c,10):null},ge(r),m.l.debug("in createBranch")},merge:function(r,c,o,h){r=m.e.sanitizeText(r,(0,m.c)()),c=m.e.sanitizeText(c,(0,m.c)());const a=M[w[C]],n=M[w[r]];if(C===r){let f=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},f}if(void 0===a||!a){let f=new Error('Incorrect usage of "merge". Current branch ('+C+")has no commits");throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},f}if(void 0===w[r]){let f=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},f}if(void 0===n||!n){let f=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},f}if(a===n){let f=new Error('Incorrect usage of "merge". Both branches have same head');throw f.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},f}if(c&&void 0!==M[c]){let f=new Error('Incorrect usage of "merge". Commit with id:'+c+" already exists, use different custom Id");throw f.hash={text:"merge "+r+c+o+h,token:"merge "+r+c+o+h,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+r+" "+c+"_UNIQUE "+o+" "+h]},f}const b={id:c||j+"-"+ce(),message:"merged branch "+r+" into "+C,seq:j++,parents:[null==A?null:A.id,w[r]],branch:C,type:W.MERGE,customType:o,customId:!!c,tag:h||""};A=b,M[b.id]=b,w[C]=b.id,m.l.debug(w),m.l.debug("in mergeBranch")},cherryPick:function(r,c,o){if(m.l.debug("Entering cherryPick:",r,c,o),r=m.e.sanitizeText(r,(0,m.c)()),c=m.e.sanitizeText(c,(0,m.c)()),o=m.e.sanitizeText(o,(0,m.c)()),!r||void 0===M[r]){let n=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw n.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},n}let h=M[r],a=h.branch;if(h.type===W.MERGE){let n=new Error('Incorrect usage of "cherryPick". Source commit should not be a merge commit');throw n.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},n}if(!c||void 0===M[c]){if(a===C){let f=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}const n=M[w[C]];if(void 0===n||!n){let f=new Error('Incorrect usage of "cherry-pick". Current branch ('+C+")has no commits");throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}const b={id:j+"-"+ce(),message:"cherry-picked "+h+" into "+C,seq:j++,parents:[null==A?null:A.id,h.id],branch:C,type:W.CHERRY_PICK,tag:o??"cherry-pick:"+h.id};A=b,M[b.id]=b,w[C]=b.id,m.l.debug(w),m.l.debug("in cherryPick")}},checkout:ge,prettyPrint:function(){m.l.debug(M),ke([_e()[0]])},clear:function(){M={},A=null;let r=(0,m.c)().gitGraph.mainBranchName,c=(0,m.c)().gitGraph.mainBranchOrder;w={},w[r]=null,q={},q[r]={name:r,order:c},C=r,j=0,(0,m.v)()},getBranchesAsObjArray:function(){return Object.values(q).map((c,o)=>null!==c.order?c:{...c,order:parseFloat(`0.${o}`,10)}).sort((c,o)=>c.order-o.order).map(({name:c})=>({name:c}))},getBranches:function(){return w},getCommits:function(){return M},getCommitsArray:_e,getCurrentBranch:function(){return C},getDirection:function(){return fe},getHead:function(){return A},setAccTitle:m.s,getAccTitle:m.g,getAccDescription:m.a,setAccDescription:m.b,setDiagramTitle:m.r,getDiagramTitle:m.t,commitType:W},renderer:{draw:function(r,c,o,h){S={},Z={},J={},ee=0,$=[];const a=(0,m.z)(),n=a.gitGraph;m.l.debug("in gitgraph renderer",r+"\n","id:",c,o),J=h.db.getCommits();const b=h.db.getBranchesAsObjArray();let f=0;b.forEach((E,u)=>{S[E.name]={pos:f,index:u},f+=50+(n.rotateCommitLabel?40:0)});const T=(0,Te.Ys)(`[id="${c}"]`);xe(T,J,!1),n.showBranches&&((r,c)=>{const o=(0,m.z)().gitGraph,h=r.append("g");c.forEach((a,n)=>{const b=n%8,f=S[a.name].pos,T=h.append("line");T.attr("x1",0),T.attr("y1",f),T.attr("x2",ee),T.attr("y2",f),T.attr("class","branch branch"+b),$.push(f);const u=(r=>{const c=document.createElementNS("http://www.w3.org/2000/svg","text");let o=[];o="string"==typeof r?r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?r:[];for(const h of o){const a=document.createElementNS("http://www.w3.org/2000/svg","tspan");a.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),a.setAttribute("dy","1em"),a.setAttribute("x","0"),a.setAttribute("class","row"),a.textContent=h.trim(),c.appendChild(a)}return c})(a.name),k=h.insert("rect"),s=h.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+b);s.node().appendChild(u);let L=u.getBBox();k.attr("class","branchLabelBkg label"+b).attr("rx",4).attr("ry",4).attr("x",-L.width-4-(!0===o.rotateCommitLabel?30:0)).attr("y",-L.height/2+8).attr("width",L.width+18).attr("height",L.height+4),s.attr("transform","translate("+(-L.width-14-(!0===o.rotateCommitLabel?30:0))+", "+(f-L.height/2-1)+")"),k.attr("transform","translate(-19, "+(f-L.height/2)+")")})})(T,b),((r,c)=>{const o=r.append("g").attr("class","commit-arrows");Object.keys(c).forEach(h=>{const a=c[h];a.parents&&a.parents.length>0&&a.parents.forEach(n=>{((r,c,o,h)=>{const a=Z[c.id],n=Z[o.id],b=((r,c,o)=>Object.keys(o).filter(n=>o[n].branch===c.branch&&o[n].seq>r.seq&&o[n].seq<c.seq).length>0)(c,o,h);let x,f="",T="",E=0,u=0,k=S[o.branch].index;if(b){f="A 10 10, 0, 0, 0,",T="A 10 10, 0, 0, 1,",E=10,u=10,k=S[o.branch].index;const s=a.y<n.y?ae(a.y,n.y):ae(n.y,a.y);x=a.y<n.y?`M ${a.x} ${a.y} L ${a.x} ${s-E} ${f} ${a.x+u} ${s} L ${n.x-E} ${s} ${T} ${n.x} ${s+u} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${a.x} ${s+E} ${T} ${a.x+u} ${s} L ${n.x-E} ${s} ${f} ${n.x} ${s-u} L ${n.x} ${n.y}`}else a.y<n.y&&(f="A 20 20, 0, 0, 0,",E=20,u=20,k=S[o.branch].index,x=`M ${a.x} ${a.y} L ${a.x} ${n.y-E} ${f} ${a.x+u} ${n.y} L ${n.x} ${n.y}`),a.y>n.y&&(f="A 20 20, 0, 0, 0,",E=20,u=20,k=S[c.branch].index,x=`M ${a.x} ${a.y} L ${n.x-E} ${a.y} ${f} ${n.x} ${a.y-u} L ${n.x} ${n.y}`),a.y===n.y&&(k=S[c.branch].index,x=`M ${a.x} ${a.y} L ${a.x} ${n.y-E} ${f} ${a.x+u} ${n.y} L ${n.x} ${n.y}`);r.append("path").attr("d",x).attr("class","arrow arrow"+k%8)})(o,c[n],a,c)})})})(T,J),xe(T,J,!0),m.u.insertTitle(T,"gitTitleText",n.titleTopMargin,h.db.getDiagramTitle()),(0,m.A)(void 0,T,n.diagramPadding,n.useMaxWidth??a.useMaxWidth)}},styles:r=>`\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0,1,2,3,4,5,6,7].map(c=>`\n        .branch-label${c} { fill: ${r["gitBranchLabel"+c]}; }\n        .commit${c} { stroke: ${r["git"+c]}; fill: ${r["git"+c]}; }\n        .commit-highlight${c} { stroke: ${r["gitInv"+c]}; fill: ${r["gitInv"+c]}; }\n        .label${c}  { fill: ${r["git"+c]}; }\n        .arrow${c} { stroke: ${r["git"+c]}; }\n        `).join("\n")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${r.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}\n  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}\n  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }\n  .tag-hole { fill: ${r.textColor}; }\n\n  .commit-merge {\n    stroke: ${r.primaryColor};\n    fill: ${r.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${r.primaryColor};\n    fill: ${r.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${r.primaryColor};\n    fill: ${r.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${r.textColor};\n  }\n`}}}]);